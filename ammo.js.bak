class Bullet {
    constructor (x, y, r) {
        this.pos = createVector(x, y);
        this.mass = 6;
        this.range = r;
        this.vel = createVector(0, 0);
        this.acc = createVector(0, 0);
        this.a_out = "";
        this.v_out = "";
        this.p_out = "";
        this.active = true;

        this.t = millis();

        this.blast = 70;
    }

    applyForce(force) {
        let f = p5.Vector.div(force, this.mass);
        this.acc.add(f);
    }

    edges() {
        if (this.pos.y > height) {
            this.active = false;
        }

        // if(this.pos.y >= height) {
        //     this.pos.y = height-this.r;
        //     this.vel.y *= -0.5;
        // }

        // if (this.pos.x >= width-55-this.r && this.pos.y > height-550) {
        //     this.pos.x = width-55-this.r;
        //     this.vel.x *= -1;
        // } else if (this.pos.x >= width-55-this.r && this.pos.y >= height-550-(this.r*1.5)) {
        //     this.pos.y = height-550-this.r;
        //     this.vel.y *= -1;
        // } else if ((this.pos.x < 0-this.r) || (this.pos.x > width+this.r)) {
        //     this.active = false;
        // }
    }

    move() {
        this.vel.add(this.acc);
        if (this.vel.y < 0) {
            this.pos.add(this.vel);
        } else {
            this.vel.set(0, 0);
        }
        // console.log("v_x: " + this.vel.x + "\tv_y: " + this.vel.y);

        this.a_out = "ACC(x: " + this.acc.x.toFixed(2) + " y: " + this.acc.y.toFixed(2) + ")\t";
        this.v_out = "VEL(x: " + this.vel.x.toFixed(2) + " y: " + this.vel.y.toFixed(2) + ")\t";
        this.p_out = "POS(x: " + this.pos.x.toFixed(2) + " y: " + this.pos.y.toFixed(2) + ")\t";

        this.acc.set(0, 0);
    }

    text() {
        return (this.t_out + this.a_out + this.v_out + this.p_out);
    }

    draw() {
        rectMode(CENTER);
        let hue = map(this.range, 300, 700, 175, 255, true);
        noStroke();
        fill(hue, 200, 255-hue/2);

        if (this.vel.y == 0) {
            let now = millis() - this.t;
            if (now/100 < 20) {
                fill(hue, 225, 125+(hue/2));
                let size = map(round(now/100), 0, 20, 1, this.blast);
                circle(this.pos.x, this.pos.y, size);
            }
            if (now/100 > 20) {
                this.active = false;
            }
        } else {
            push();
            translate(this.pos.x, this.pos.y);
            rotate(this.vel.heading() - HALF_PI);
            rect(0, 0, 4, 8);
            circle(0, 4, 4);
            pop();
        }
    }
}